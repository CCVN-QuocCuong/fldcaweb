# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:android)

platform :android do
  before_all do
    ENV['S3_ACCESS_KEY'] = "AKIA5NAFX54WFOEMZTYI"
    ENV['S3_SECRET_ACCESS_KEY'] = "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"
    ENV['S3_BUCKET'] = "fldca-application-bucket"
    ENV['S3_REGION'] = "ap-southeast-2"
    ENV['S3_ACL'] = "public-read"
    ENV['S3_SERVER_SIDE_ENCRYPTION'] = "AES256"
  end

  ############################################################

  desc "Runs all the tests"
  lane :test do
    gradle(task: "test")
  end

  ############################################################

  desc "Submit a new Beta Build to FireBase App Distribution"
  lane :beta do
    #store_password = prompt(text: "Signing Store Password: ", secure_text: true)
    #key_password = prompt(text: "Alias Key Password: ", secure_text: true)
    version_name = prompt(text: "Version Name On Android: ")
    version_code = prompt(text: "Version Code On Android: ")
    releaseFilePath = File.join(Dir.pwd, "/", "my-release-key.keystore")
    gradle(task: 'clean')
    gradle(
      task: 'assemble',
      build_type: 'Release',
      print_command: false,
      properties: {
        "android.injected.signing.store.file" => releaseFilePath,
        "android.injected.signing.store.password" => 123456,
        "android.injected.signing.key.alias" => "my-key-alias",
        "android.injected.signing.key.password" => 123456,
        "android.injected.version.name" => version_name,
        "android.injected.version.code" => version_code
      }
    )

    releaseNotes = changelog_from_git_commits(
      commits_count: 10,
      pretty: "- %s"
    )

    firebase_app_distribution(
      app: "1:362838375987:android:abe2ae7ac2520f0a0f2d46",
      firebase_cli_token: "1//0edy7IQBoXy6mCgYIARAAGA4SNwF-L9IrjLc1yZh7R1GuMF-6QbxmteFyCBSr5tvSr3pXnDFWiUhlAqyj37DbalmoA-ggY-2zrBs",
      release_notes: releaseNotes
    )
  end

  ############################################################

  desc "Submit a new Beta Build to AWS S3"
  lane :upload_s3 do
    #store_password = prompt(text: "Signing Store Password: ", secure_text: true)
    #key_password = prompt(text: "Alias Key Password: ", secure_text: true)
    version_name = prompt(text: "Version Name On Android: ")
    version_code = prompt(text: "Version Code On Android: ")
    releaseFilePath = File.join(Dir.pwd, "/", "my-release-key.keystore")
    gradle(task: 'clean')
    gradle(
      task: 'assemble',
      build_type: 'Release',
      print_command: false,
      properties: {
        "android.injected.signing.store.file" => releaseFilePath,
        "android.injected.signing.store.password" => 123456,
        "android.injected.signing.key.alias" => "my-key-alias",
        "android.injected.signing.key.password" => 123456,
        "android.injected.version.name" => version_name,
        "android.injected.version.code" => version_code
      }
    )

    aws_s3(
      # All of these are used to make Shenzhen's `ipa distribute:s3` command
      access_key: ENV['S3_ACCESS_KEY'],                         # Optional - defaults to AWS Instance Profile Creds.
      secret_access_key: ENV['S3_SECRET_ACCESS_KEY'],           # Optional - defaults to AWS Instance Profile Creds.
      bucket: ENV['S3_BUCKET'],                                 # Required from user.
      region: ENV['S3_REGION'],                                 # Required from user.
      acl: ENV['S3_ACL'],                                       # Optional - defaults to 'public-read'
      server_side_encryption: ENV['S3_SERVER_SIDE_ENCRYPTION'], # Optional
      apk: 'app/build/outputs/apk/release/app-release.apk',     # Required (if not uploading an IPA).
      app_directory: 'build_android',                           # Optional but nice if you want to put multiple apps in same bucket
      path: 'FieldLogging_Beta-v{version_name}_b{version_code}/', # This is actually the default.
      upload_metadata: true,                                    # Upload version.json, plist and HTML. Set to false to skip uploading of these files.
      version_file_name: 'app_version.json',                    # Name of the file to upload to S3. Defaults to 'version.json'
      version_template_path: 'path/to/erb'                      # Path to an ERB to configure the structure of the version JSON file
    )
  end

  ############################################################

  desc "Submit a new Beta Build to FireBase App Distribution"
  lane :beta_jenkins do |options|
    #store_password = prompt(text: "Signing Store Password: ", secure_text: true)
    #key_password = prompt(text: "Alias Key Password: ", secure_text: true)
    #version_name = prompt(text: "Version Name On Android: ")
    #version_code = prompt(text: "Version Code On Android: ")
    releaseFilePath = File.join(Dir.pwd, "/", "my-release-key.keystore")
    gradle(task: 'clean')
    gradle(
      task: 'assemble',
      build_type: 'Release',
      print_command: false,
      properties: {
        "android.injected.signing.store.file" => releaseFilePath,
        "android.injected.signing.store.password" => 123456,
        "android.injected.signing.key.alias" => "my-key-alias",
        "android.injected.signing.key.password" => 123456,
        "android.injected.version.name" => options[:version_name], 
        "android.injected.version.code" => options[:build_number]
      }
    )

    releaseNotes = changelog_from_git_commits(
      commits_count: 10,
      pretty: "- %s"
    )

    if options[:lane_deployment] == "firebase_app_distribution"
      firebase_app_distribution(
        app: "1:362838375987:android:abe2ae7ac2520f0a0f2d46",
        groups: options[:groups_testers],   #Play Protect Appeals Submission Form
        firebase_cli_token: "1//0edy7IQBoXy6mCgYIARAAGA4SNwF-L9IrjLc1yZh7R1GuMF-6QbxmteFyCBSr5tvSr3pXnDFWiUhlAqyj37DbalmoA-ggY-2zrBs",
        release_notes: releaseNotes
      )
    end

    if options[:lane_deployment] == "aws_s3"
      aws_s3(
        # All of these are used to make Shenzhen's `ipa distribute:s3` command
        access_key: ENV['S3_ACCESS_KEY'],                         # Optional - defaults to AWS Instance Profile Creds.
        secret_access_key: ENV['S3_SECRET_ACCESS_KEY'],           # Optional - defaults to AWS Instance Profile Creds.
        bucket: ENV['S3_BUCKET'],                                 # Required from user.
        region: ENV['S3_REGION'],                                 # Required from user.
        acl: ENV['S3_ACL'],                                       # Optional - defaults to 'public-read'
        server_side_encryption: ENV['S3_SERVER_SIDE_ENCRYPTION'], # Optional
        apk: 'app/build/outputs/apk/release/app-release.apk',     # Required (if not uploading an IPA).
        app_directory: 'build_android',                           # Optional but nice if you want to put multiple apps in same bucket
        path: 'FieldLogging_Beta-v{version_name}_b{version_code}/', # This is actually the default.
        upload_metadata: true,                                    # Upload version.json, plist and HTML. Set to false to skip uploading of these files.
        version_file_name: 'app_version.json',                    # Name of the file to upload to S3. Defaults to 'version.json'
        version_template_path: 'path/to/erb'                      # Path to an ERB to configure the structure of the version JSON file
      ) 
    end  
  end

  ############################################################

  desc "Deploy a new version to the Google Play"
  lane :deploy do
    gradle(task: "clean assembleRelease")
    upload_to_play_store
  end
end
